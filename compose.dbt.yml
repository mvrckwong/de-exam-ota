# This is a Docker Compose file for a dbt instance using Postgres in production.
# <project>_<service>_<environment>
name: exam_ota-dbt_postgres-prod

x-common-config:
  &dbt-common-config
  build:
    context: .
    dockerfile: Dockerfile.dbt
  environment:
    DBT_PROFILES_DIR: /root/.dbt
    DBT_PROJECT_DIR: /usr/app
    ENVIRONMENT: prod
  volumes:
    - ./dbt/models:/usr/app/dbt/models
    - ./dbt/macros:/usr/app/dbt/macros
    - ./dbt/tests:/usr/app/dbt/tests
    - ./dbt/snapshots:/usr/app/dbt/snapshots
    - ./dbt/analyses:/usr/app/dbt/analyses
    - ./dbt/seeds:/usr/app/dbt/seeds
    - ./target:/usr/app/target
    - ./logs:/usr/app/logs
  networks:
    - dbt-network
    - shared-db-network

services:
  debug: # Check if it can connect to the datawarehouse, etc.
    <<: *dbt-common-config
    command: ["debug"]
  
  compile: # Compile the dbt models
    <<: *dbt-common-config
    command: ["compile"]
    
  api:
    <<: *dbt-common-config
    entrypoint: ["uv"]
    networks:
      - dbt-network
      - shared-db-network
      - shared-airflow-network
    command: [
        "run",
        "uvicorn",
        "api.server:app",
        "--host", "0.0.0.0",
        "--port", "10000",
        "--workers", "2",
        "--log-level", "info"
      ]
    ports:
      - "10000:10000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:10000/health"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    depends_on:
      debug:
        condition: service_completed_successfully
      compile:
        condition: service_completed_successfully

networks:
  dbt-network:
    driver: bridge
  shared-db-network:
    external: true
    name: shared-db-network
  shared-airflow-network:
    external: true
    name: shared-airflow-network
